<?php

/**
 * Implements hook_theme().
 */
function menu_burger_theme($existing, $type, $theme, $path)
{
    return [
        'menu_burger_block' => [
            'variables' => [
            'content' => Null,
            ],
            'render element' => 'children',
            'path' => $path . '/templates',
            'template' => 'menu-burger-block'
        ]
    ];
}



/**
 * Implements hook_preprocess_HOOK() for breadcrumb templates.
 */
function  menu_burger_preprocess_breadcrumb(&$variables) {
  $burger_service = \Drupal::service('menu_burger.view_services');
  $is_taxo_page = $burger_service->is_taxonomy_term_page();


  $burger_service->disableDuplicateHome($variables);
  $base_url = \Drupal::request()->getSchemeAndHttpHost();
  // Check if the user is authenticated (logged in).
  $currentUser = \Drupal::currentUser();
  $isUserLoggedIn = $currentUser->isAuthenticated();

  // Disable breadcrumb for logged out users.
  if (!$isUserLoggedIn) {
    $base_url = \Drupal::request()->getSchemeAndHttpHost();
    if (strpos($base_url, 'cultureviande.') === false) {
      $variables['breadcrumb'] = [];
    }
  }

  if($is_taxo_page) {
    $all_child = [];
    $breadcrumbs = $variables['breadcrumb'];
    $count = count($variables['breadcrumb']) -1;
    // Move the internal pointer to the last element
    end($variables['breadcrumb']);

    // Get the key of the last element
    $lastKey = key($variables['breadcrumb']);
    foreach ($variables['breadcrumb'] as $key => $breadcrumb) {




      if ($key != $lastKey) {// pour le fil d'ariane, juste desactiver le lien pour chaque element sauf le dernier; exemple Accueil > Cotations > Cotation Hebdo....
        //  je desactive le lien sur accueil et Cotations 
        $variables['breadcrumb'][$key]['url'] = NULL;
      }
    }
    $variables['breadcrumb'][0]['text'] = str_replace('> Accueil', 'Accueil', $breadcrumbs[0]['text']);
    foreach ($breadcrumbs as  $key => $each_breadcrumb) {
      $new_all_child = [];
      $term_name = str_replace(' > ', '', $each_breadcrumb['text']);
      if (!is_array($term_name)) {
        $all_child = $burger_service->getTaxonomyTermChildByParentName($term_name);
      }
      


      

      if (strpos($base_url, 'cultureviande.') !== false) {
        // Define the client IP you want to check against


        // if ($server_ip === $client_ip) {
            unset($all_child['no-linkQualité & Sécurité Sanitaire']);
            unset($all_child['no-linkBientraitance Animale']);
            // unset($all_child['no-linkEnvironnement']);
            
            // dump([$all_child, $each_breadcrumb]);
            if (($each_breadcrumb['url'] == '/accueil-0')) {
              // dump($all_child, $each_breadcrumb);
              $all_child['no-linkEnvironnement'] = [ "id" => "5541",
              "name" => "Les Filières",
              "weight" => "9"];
            }
            if (($each_breadcrumb['url'] == '/')) {
              $all_child['no-linkEnvironnement'] = [ "id" => "5541",
              "name" => "Les Filières",
              "weight" => "9"];
          }
        // }
        

      }

      if (strpos($base_url, 'cultureviande.') !== false) {

        // if ($server_ip === $client_ip) {

          // dump($each_breadcrumb);
          if ($each_breadcrumb['url'] == '/accueil/filieres') {
            $burger_service->alterChild($all_child);
          }



if ($each_breadcrumb['url'] == '/accueil/expertises') {

  $all_child['/accueil/qualite-securite-sanitaire'] = [
    "id" => "6262",
    "name" => "Qualité & Sécurité Sanitaire",
    "weight" => "0"];
    $all_child['/accueil/bientraitance-animale'] = [
      "id" => "6268",
      "name" => "Bientraitance Animale",
      "weight" => "0"];
      $all_child['/accueil/environnement'] = [
        "id" => "6269",
        "name" => "Environnement",
        "weight" => "0"];
        


        // Element to move
$keyToMove = "/expertises/social";

// Check if the key exists in the array
if (array_key_exists($keyToMove, $all_child)) {
    // Remove the element from its current position
    $valueToMove = $all_child[$keyToMove];
    unset($all_child[$keyToMove]);

    // Add the element to the end of the array
    $all_child[$keyToMove] = $valueToMove;
}


      }
        // }
      }
      
      foreach ($all_child as $key_child => $value_child) {
           // Check if the client's IP address matches your IP address
        $base_url = \Drupal::request()->getSchemeAndHttpHost();
        if (strpos($base_url, 'cultureviande.') !== false) {



          if ($key_child == '/expertises/export') {
           
          }


          $id_rub = $value_child['id'];
          if (!$burger_service->getDomainByid($id_rub)) {
            continue;
          }
        }
        $new_all_child[$key_child] = $value_child['name'];
      }
 
      $variables['breadcrumb'][$key]['submenu'] = $new_all_child;
    }

    $variables['breadcrumb'] = array_slice($variables['breadcrumb'], 0, -1); // remove duplicate of current page

    
    

    
/*     $all_parents_term = $burger_service->getTaxonomyTermChildByParentName(null);
    foreach ($all_parents_term as $key => $value) {
      $first_child_term = $burger_service->getTaxonomyTermChildByParentName($value);
      $link = ['link_menus' => [0 => $key]];
      $all_parents_term[$value] = [
        0 => $value,
        'link_menus' => $key,
      ];

      $all_parents_term[$value] = array_merge($first_child_term, $all_parents_term[$value]);

    }
     foreach ($all_parents_term as $first_key_level => $first_level_value) {
      foreach (reset($first_level_value) as $second_key_level => $second_level_value)  {
        $second_child_term = $burger_service->getTaxonomyTermChildByParentName($second_level_value);
        
        
        if (isset($first_level_value[array_keys( $first_level_value)[0]][$second_key_level])) {
          $all_parents_term[$first_key_level][$second_key_level] = $second_child_term;
          $all_parents_term[$first_key_level][array_keys( $first_level_value)[0]][$second_key_level] = [$second_level_value => $second_child_term];
        }
      }
    }  
    dump($all_parents_term, 'two '); */
    // $burger_service->getAllTaxoWithHierarchy();
  }
  $variables['breadcrumb'][0]['text'] = str_replace('> Accueil', 'Accueil', $variables['breadcrumb'][0]['text']);

}
  

/**
 * Implements hook_preprocess_page().
 */
function menu_burger_preprocess_page(&$variables)
{
  $variables['#attached']['library'][] = 'menu_burger/menu_burger';
}